// app/layout.tsx
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { UserAuthProvider } from "@/context/AuthFormContext";
import { CartProvider } from "@/context/CartContext";
import { ToastContainer } from "react-toastify";
import LayoutWrapper from "@/components/shared/layoutwrapper";
import React from "react";
import ReactQueryProvider from "@/components/providers/reactQueryProvider";
import { Toaster } from "react-hot-toast";
import { NotificationProvider } from "@/context/notificationContext";
import { LanguageProvider } from "@/context/LanguageContext"; // Add this
import GuestSessionProvider from "@/lib/GuestSessionProvider";
import { GoogleOAuthProvider } from "@react-oauth/google";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <LanguageProvider>
          {" "}
          {/* Add this wrapper */}
          <UserAuthProvider>
            <ReactQueryProvider>
              <CartProvider>
                <Toaster />
                <NotificationProvider>
                  <ToastContainer />
                  <GuestSessionProvider>
                    <GoogleOAuthProvider
                      clientId={process.env.NEXT_PUBLIC_GOOGLE_WEB_CLIENT_ID!}
                    >
                      <LayoutWrapper>{children}</LayoutWrapper>
                    </GoogleOAuthProvider>
                  </GuestSessionProvider>
                </NotificationProvider>
              </CartProvider>
            </ReactQueryProvider>
          </UserAuthProvider>
        </LanguageProvider>
      </body>
    </html>
  );
}
